import sympy as simp

# Criação da lista que receberá os dados do arquivo
Dados_do_arquivo = []

# Leitura do arquivo e separação das linhas em índices da lista
with open('input.txt', 'r') as file:
    for line in file:
        Dados_do_arquivo.append(line.strip())

# Separação dos dados em variáveis com nomes mais significativos
a = float(Dados_do_arquivo[0])
b = float(Dados_do_arquivo[1])
n = int(Dados_do_arquivo[2])  # Lê o número de subintervalos do arquivo

# Declaração da função
def f(x):
    return simp.sympify(Dados_do_arquivo[3]).subs({"x": x}).evalf()

# Função para calcular a integral usando o método do trapézio composto
def trapezoidal_composite(f, a, b, n):
    h = (b - a) / n
    integral = 0

    for i in range(n):
        x0 = a + i * h
        x1 = a + (i + 1) * h
        integral += (h / 2) * (f(x0) + f(x1))

    return integral

# Número de iterações para a extrapolação de Richardson
ordem_extrapolacao = 3

# Aplicando a extrapolação de Richardson
integral_extrapolada = trapezoidal_composite(f, a, b, n)
for _ in range(ordem_extrapolacao):
    n *= 2  # Dobrando o número de subintervalos
    h = (b - a) / n
    integral_extrapolada_novo = trapezoidal_composite(f, a, b, n)
    integral_extrapolada = (4 * integral_extrapolada_novo - integral_extrapolada) / 3
    integral_extrapolada_novo = integral_extrapolada

print("Resultado da integral com Extrapolacão de Richardson:")
print(integral_extrapolada)

with open('output.txt', 'w') as arquivo_saida:
    arquivo_saida.write(f"Resultado da integral com Extrapolacao de Richardson:\n")
    arquivo_saida.write(f"{integral_extrapolada}\n")